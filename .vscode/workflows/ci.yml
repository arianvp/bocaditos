on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
jobs:
  eval:
    runs-on: ubuntu-latest
    outputs:
      layers: ${{ steps.nix-eval-jobs.outputs.layers }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
      - uses: cachix/cachix-action@v14
        with:
          name: sonos
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: nix-eval-jobs
        id: nix-eval-jobs
        run: |
          {
            echo 'layers<<EOF'
            ./shell.sh build-schedule
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"
      - name: cache derivations
        run: echo "$layers" | jq -r .[].derivations[].drvPath | cachix push sonos
        env:
          layers: ${{ steps.nix-eval-jobs.outputs.layers }}
  build:
    needs: [eval]
    strategy:
      max-parallel: 1
      matrix:
        layer: ${{fromJson(needs.eval.outputs.layers)}}
    name: build ${{ matrix.layer.layer }}
    uses: ./.github/workflows/build-layer.yml
    with:
      derivations: ${{ toJson(matrix.layer.derivations)}}
    secrets:
      CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
          